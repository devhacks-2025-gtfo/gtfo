{
  "files": [
    {
      "path": "public/index.html",
      "content": "<!DOCTYPE html>\n<html>\n<head>\n    <title>Message Board</title>\n</head>\n<body>\n    <h1>Message Board</h1>\n    <form action=\"/post\" method=\"POST\">\n        <input type=\"text\" name=\"message\" placeholder=\"Enter your message\">\n        <button type=\"submit\">Post</button>\n    </form>\n    <div id=\"search\">\n        <input type=\"text\" id=\"searchInput\" placeholder=\"Search messages\">\n        <button onclick=\"searchMessages()\">Search</button>\n    </div>\n    <div id=\"messages\"></div>\n\n    <script>\n        // Vulnerable to XSS - directly inserting HTML\n        function loadMessages() {\n            fetch('/messages')\n                .then(response => response.json())\n                .then(data => {\n                    const messagesDiv = document.getElementById('messages');\n                    messagesDiv.innerHTML = '';\n                    data.forEach(message => {\n                        messagesDiv.innerHTML += `<p>${message.content}</p>`;\n                    });\n                });\n        }\n\n        function searchMessages() {\n            const searchTerm = document.getElementById('searchInput').value;\n            fetch('/search?term=' + searchTerm)\n                .then(response => response.json())\n                .then(data => {\n                    const messagesDiv = document.getElementById('messages');\n                    messagesDiv.innerHTML = '';\n                    data.forEach(message => {\n                        messagesDiv.innerHTML += `<p>${message.content}</p>`;\n                    });\n                });\n        }\n\n        loadMessages();\n    </script>\n</body>\n</html>"
    },
    {
      "path": "server.js",
      "content": "const express = require('express');\nconst sqlite3 = require('sqlite3').verbose();\nconst app = express();\n\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\napp.use(express.static('public'));\n\nconst db = new sqlite3.Database('messages.db');\n\n// Create messages table and insert secret flag\ndb.serialize(() => {\n    db.run('CREATE TABLE IF NOT EXISTS messages (content TEXT)');\n    db.run('CREATE TABLE IF NOT EXISTS secrets (flag TEXT)');\n    // Insert the flag only if it doesn't exist\n    db.get('SELECT flag FROM secrets LIMIT 1', [], (err, row) => {\n        if (!row) {\n            db.run('INSERT INTO secrets (flag) VALUES (?)', ['flag{sql1_4nd_xss_4r3_d4ng3r0us}']);\n        }\n    });\n});\n\napp.get('/messages', (req, res) => {\n    db.all('SELECT content FROM messages', [], (err, rows) => {\n        if (err) {\n            res.status(500).json({ error: err.message });\n            return;\n        }\n        res.json(rows);\n    });\n});\n\n// Vulnerable to SQL injection\napp.get('/search', (req, res) => {\n    const searchTerm = req.query.term;\n    // Intentionally vulnerable SQL query\n    const query = `SELECT content FROM messages WHERE content LIKE '%${searchTerm}%'`;\n    \n    db.all(query, [], (err, rows) => {\n        if (err) {\n            res.status(500).json({ error: err.message });\n            return;\n        }\n        res.json(rows);\n    });\n});\n\napp.post('/post', (req, res) => {\n    // Vulnerable to XSS - no input sanitization\n    const message = req.body.message;\n    db.run('INSERT INTO messages (content) VALUES (?)', [message], (err) => {\n        if (err) {\n            res.status(500).json({ error: err.message });\n            return;\n        }\n        res.redirect('/');\n    });\n});\n\nconst server = app.listen(3000, () => {\n    console.log('Server running on port 3000');\n});\n\n// Graceful shutdown handling\nprocess.on('SIGTERM', () => {\n    console.log('SIGTERM received. Closing server...');\n    server.close(() => {\n        console.log('Server closed. Closing database...');\n        db.close(() => {\n            console.log('Database closed. Exiting...');\n            process.exit(0);\n        });\n    });\n});\n\nprocess.on('SIGINT', () => {\n    console.log('SIGINT received. Closing server...');\n    server.close(() => {\n        console.log('Server closed. Closing database...');\n        db.close(() => {\n            console.log('Database closed. Exiting...');\n            process.exit(0);\n        });\n    });\n});"
    },
    {
      "path": "package.json",
      "content": "{\n  \"name\": \"vulnerable-message-board\",\n  \"version\": \"1.0.0\",\n  \"description\": \"A simple message board vulnerable to XSS and SQLi\",\n  \"main\": \"server.js\",\n  \"scripts\": {\n    \"start\": \"node server.js\"\n  },\n  \"dependencies\": {\n    \"express\": \"^4.17.1\",\n    \"sqlite3\": \"^5.0.2\"\n  }\n}"
    }
  ]
}